name: Terraform Validate/Plan (conditional)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  id-token: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # Always run validate locally without AWS creds
      - name: Terraform Init (no backend)
        working-directory: infra/terraform
        run: terraform init -input=false -backend=false

      - name: Terraform Validate
        working-directory: infra/terraform
        run: terraform validate

      # If the AWS role secret exists, configure credentials and run plan/apply
      - name: Configure AWS credentials (OIDC)
        if: ${{ secrets.AWS_TERRAFORM_ROLE_ARN != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TERRAFORM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init (with backend)
        if: ${{ secrets.AWS_TERRAFORM_ROLE_ARN != '' }}
        working-directory: infra/terraform
        run: terraform init -input=false

      - name: Terraform Plan
        if: ${{ secrets.AWS_TERRAFORM_ROLE_ARN != '' }}
        working-directory: infra/terraform
        run: terraform plan -input=false -lock=false -out=tfplan

      # Optional apply on push to main when explicitly enabled
      - name: Terraform Apply
        if: ${{ secrets.AWS_TERRAFORM_ROLE_ARN != '' && github.event_name == 'push' && github.ref == 'refs/heads/main' && vars.TERRAFORM_AUTO_APPLY == 'true' }}
        working-directory: infra/terraform
        run: terraform apply -input=false -auto-approve tfplan


